<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zengshi.ecp.server.dao.mapper.common.DataInoutMapper" >
  <resultMap id="BaseResultMap" type="com.zengshi.ecp.server.dao.model.common.DataInout" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="MODULE_NAME" property="moduleName" jdbcType="VARCHAR" />
    <result column="FILE_ID" property="fileId" jdbcType="VARCHAR" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="TIMESTAMP" />
    <result column="END_DATE" property="endDate" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
    <result column="OPERATE_TYPE" property="operateType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, MODULE_NAME, FILE_ID, OPERATOR, BEGIN_DATE, END_DATE, STATUS, FILE_NAME, OPERATE_TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zengshi.ecp.server.dao.model.common.DataInoutCriteria" >
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       select * from (select t_1.*,rownum as row_num from (
    </if>
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_base_data_inout
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       <![CDATA[ ) t_1 where rownum<=#{limitClauseCount,jdbcType=INTEGER} + #{limitClauseStart,jdbcType=INTEGER}) t_2 where t_2.row_num>#{limitClauseStart,jdbcType=INTEGER}]]>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from t_base_data_inout
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from t_base_data_inout
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengshi.ecp.server.dao.model.common.DataInoutCriteria" >
    delete from t_base_data_inout
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengshi.ecp.server.dao.model.common.DataInout" >
    insert into t_base_data_inout (ID, MODULE_NAME, FILE_ID, 
      OPERATOR, BEGIN_DATE, END_DATE, 
      STATUS, FILE_NAME, OPERATE_TYPE
      )
    values (#{id,jdbcType=INTEGER}, #{moduleName,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{beginDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{operateType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zengshi.ecp.server.dao.model.common.DataInout" >
    insert into t_base_data_inout
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="moduleName != null" >
        MODULE_NAME,
      </if>
      <if test="fileId != null" >
        FILE_ID,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE,
      </if>
      <if test="endDate != null" >
        END_DATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="fileName != null" >
        FILE_NAME,
      </if>
      <if test="operateType != null" >
        OPERATE_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        #{operateType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengshi.ecp.server.dao.model.common.DataInoutCriteria" resultType="java.lang.Long" >
    select count(*) from t_base_data_inout
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_base_data_inout
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.moduleName != null" >
        MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null" >
        OPERATOR = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.beginDate != null" >
        BEGIN_DATE = #{record.beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null" >
        END_DATE = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null" >
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.operateType != null" >
        OPERATE_TYPE = #{record.operateType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_base_data_inout
    set ID = #{record.id,jdbcType=INTEGER},
      MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      OPERATOR = #{record.operator,jdbcType=VARCHAR},
      BEGIN_DATE = #{record.beginDate,jdbcType=TIMESTAMP},
      END_DATE = #{record.endDate,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=INTEGER},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      OPERATE_TYPE = #{record.operateType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengshi.ecp.server.dao.model.common.DataInout" >
    update t_base_data_inout
    <set >
      <if test="moduleName != null" >
        MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        FILE_ID = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        END_DATE = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        OPERATE_TYPE = #{operateType,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengshi.ecp.server.dao.model.common.DataInout" >
    update t_base_data_inout
    set MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      FILE_ID = #{fileId,jdbcType=VARCHAR},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
      END_DATE = #{endDate,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=INTEGER},
      FILE_NAME = #{fileName,jdbcType=VARCHAR},
      OPERATE_TYPE = #{operateType,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>
