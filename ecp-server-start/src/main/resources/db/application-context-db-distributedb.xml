<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	

	<bean id="transactionManagerDB" class="com.db.distribute.DistributedDataSource" init-method="init">
        <property name="cc" ref="cc"/>
        <property name="confPath" value="${transactionManagerDB}"/>
        <property name="fileManager" ref="fileManager"/>
        <property name="distributedDB" value="transactionManagerDB"/>
    </bean>
    
    <!--
                文件读取。用于读取classpath下的文件信息；开发环境的时候可以使用，到了现网，或者是部署环境上，需要将distributedRule.xml写入mongodb
    -->
    <bean id="fileManager" class="com.zengshi.ecp.frame.file.ClassPathFileManager" />
    <!-- 
    <bean id="sqlSession" class="com.zengshi.ecp.busi.demo.mybatis.EcpSqlSessionFactroy" init-method="init">
    	<constructor-arg index="0" value="sqlMap/sqlMapConfig-distribute.xml"/>
    	<constructor-arg index="1" ref="transactionManagerDB"/>
    </bean>
     -->

    <bean id="sqlSessionEcp" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactoryEcp" />
	  <constructor-arg index="1" value="BATCH" /> 
	</bean>
    <bean id="sqlSessionFactoryEcp" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="transactionManagerDB" />  
        <property name="mapperLocations" value="#{configProperties.getValue('busi.mapper.loc','classpath*:/sqlMapper/${database.name}/busi/**/*.xml')}" />
        <property name="databaseIdProvider" ref="ecpFrameVendorDatabaseIdProvider"></property>
    </bean> 
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryEcp"/>
        <property name="basePackage" value="#{configProperties.getValue('busi.mapper.pkg','com.zengshi.ecp.*.dao.mapper.busi')}" />
    </bean>
     
    
    <bean id="jdbcTemplateEcp" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="transactionManagerDB"/>
    </bean>
    <!--事务管理DataSourceTransactionManager -->
    <bean id="txManagerEcp" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="transactionManagerDB" />  
    </bean>
  	<bean id="transactionTemplate2" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="txManagerEcp" />
		</property>
	</bean>
	
    <!--启动spring注解功能  --> 
    <tx:annotation-driven transaction-manager="txManagerEcp" />  
	
	<!-- aop事务配置-->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="productServiceMethodsEcp" expression="#{configProperties.getValue('busi.tx.exp.service','execution(* com.zengshi.ecp.*.service.busi..*.*(..))')}" />
		<aop:advisor advice-ref="txAdviceEcp" pointcut-ref="productServiceMethodsEcp" />
		<aop:advisor advice-ref="txAdviceEcp" pointcut="#{configProperties.getValue('busi.tx.exp.facade','execution(* com.zengshi.ecp.*.facade..*.*(..))')}"/>
	</aop:config>

	<tx:advice id="txAdviceEcp" transaction-manager="txManagerEcp">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="regist*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="import*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
		    <tx:method name="edit*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="pulish*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="execute*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="batch*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="generate*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<!--增加事物控制-->
			<tx:method name="joinTransaction" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
			<tx:method name="*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	 
</beans>
